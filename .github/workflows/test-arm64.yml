name: Core Repo ARM Tests

on:
  push:
    branches-ignore:
    - 'release/*'
  pull_request:

jobs:
  build-arm64:
    strategy:
      matrix:
        python-version: [ py36, py37, py38, py39, py310 ]
        package: ["api", "sdk", "semantic", "getting", "shim", "exporter", "protobuf", "propagator"]
        os: [ ubuntu-20.04 ]
      fail-fast: false
    env:
      RUN_MATRIX_COMBINATION: ${{ matrix.python-version }}-${{ matrix.package }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Test tox
      run: |
            docker run --rm -v ${{ github.workspace }}:/io:rw --workdir=/io \
            arm64v8/ubuntu \
            bash -exc 'apt-get update && \
            apt install software-properties-common -y && \
            add-apt-repository ppa:deadsnakes/ppa -y && \
            apt install -y ${{ matrix.python-version }} && \
            apt install -y ${{ matrix.python-version }}-venv && \
            ${{ matrix.python-version }} -m venv .env && \
            source .env/bin/activate && \
            uname -m && \
            pip install --upgrade pip && \
            pip install -U tox-factor && \
            tox -f ${{ matrix.python-version }}-${{ matrix.package }} -- --benchmark-json=${{ env.RUN_MATRIX_COMBINATION }}-benchmark.json && \
            deactivate'
            
  build-misc-arm64:
    strategy:
      matrix:
        python-version: [ py39 ]
        tox-environment: [ "docker-tests", "lint", "docs", "mypy", "mypyinstalled", "tracecontext" ]
      fail-fast: false
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Test Misc
      run: |
            docker run --rm -v ${{ github.workspace }}:/io:rw --workdir=/io \
            arm64v8/ubuntu \
            bash -exc 'apt-get update && \
            apt install software-properties-common -y && \
            add-apt-repository ppa:deadsnakes/ppa -y && \
            apt install -y ${{ matrix.python-version }} && \
            apt install -y ${{ matrix.python-version }}-venv && \
            ${{ matrix.python-version }} -m venv .env && \
            source .env/bin/activate && \
            uname -m && \
            pip install --upgrade pip && \
            pip install -U tox && \
            tox -e ${{ matrix.tox-environment }} && \
            deactivate'

  build-contrib-arm64:
    strategy:
      matrix:
        python-version: [ py36 ]
        package: ["instrumentation", "exporter"]
      fail-fast: false
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Test contrib build
      run: |
            docker run --rm -v ${{ github.workspace }}:/io:rw --workdir=/io \
            arm64v8/ubuntu \
            bash -exc 'apt-get update && \
            apt install software-properties-common -y && \
            add-apt-repository ppa:deadsnakes/ppa -y && \
            apt install -y ${{ matrix.python-version }} && \
            apt install -y ${{ matrix.python-version }}-venv && \
            ${{ matrix.python-version }} -m venv .env && \
            source .env/bin/activate && \
            uname -m && \
            pip install --upgrade pip && \
            pip install -U tox-factor && \
            tox -f ${{ matrix.python-version }}-${{ matrix.package }} && \
            deactivate'
